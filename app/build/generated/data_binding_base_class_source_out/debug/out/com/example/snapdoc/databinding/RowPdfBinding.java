// Generated by view binder compiler. Do not edit!
package com.example.snapdoc.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageButton;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.snapdoc.R;
import com.google.android.material.card.MaterialCardView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class RowPdfBinding implements ViewBinding {
  @NonNull
  private final MaterialCardView rootView;

  @NonNull
  public final TextView dateTv;

  @NonNull
  public final ImageButton moreBtn;

  @NonNull
  public final TextView nameTv;

  @NonNull
  public final TextView pagesTv;

  @NonNull
  public final TextView sizeTv;

  @NonNull
  public final ImageView thumbnailIv;

  private RowPdfBinding(@NonNull MaterialCardView rootView, @NonNull TextView dateTv,
      @NonNull ImageButton moreBtn, @NonNull TextView nameTv, @NonNull TextView pagesTv,
      @NonNull TextView sizeTv, @NonNull ImageView thumbnailIv) {
    this.rootView = rootView;
    this.dateTv = dateTv;
    this.moreBtn = moreBtn;
    this.nameTv = nameTv;
    this.pagesTv = pagesTv;
    this.sizeTv = sizeTv;
    this.thumbnailIv = thumbnailIv;
  }

  @Override
  @NonNull
  public MaterialCardView getRoot() {
    return rootView;
  }

  @NonNull
  public static RowPdfBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static RowPdfBinding inflate(@NonNull LayoutInflater inflater, @Nullable ViewGroup parent,
      boolean attachToParent) {
    View root = inflater.inflate(R.layout.row_pdf, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static RowPdfBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.dateTv;
      TextView dateTv = ViewBindings.findChildViewById(rootView, id);
      if (dateTv == null) {
        break missingId;
      }

      id = R.id.moreBtn;
      ImageButton moreBtn = ViewBindings.findChildViewById(rootView, id);
      if (moreBtn == null) {
        break missingId;
      }

      id = R.id.nameTv;
      TextView nameTv = ViewBindings.findChildViewById(rootView, id);
      if (nameTv == null) {
        break missingId;
      }

      id = R.id.pagesTv;
      TextView pagesTv = ViewBindings.findChildViewById(rootView, id);
      if (pagesTv == null) {
        break missingId;
      }

      id = R.id.sizeTv;
      TextView sizeTv = ViewBindings.findChildViewById(rootView, id);
      if (sizeTv == null) {
        break missingId;
      }

      id = R.id.thumbnailIv;
      ImageView thumbnailIv = ViewBindings.findChildViewById(rootView, id);
      if (thumbnailIv == null) {
        break missingId;
      }

      return new RowPdfBinding((MaterialCardView) rootView, dateTv, moreBtn, nameTv, pagesTv,
          sizeTv, thumbnailIv);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
